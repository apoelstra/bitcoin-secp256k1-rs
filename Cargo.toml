[package]
name = "secp256k1"
version = "0.21.2"
authors = [ "Dawid Ciężarkiewicz <dpc@ucore.info>",
            "Andrew Poelstra <apoelstra@wpsoftware.net>" ]
license = "CC0-1.0"
homepage = "https://github.com/rust-bitcoin/rust-secp256k1/"
repository = "https://github.com/rust-bitcoin/rust-secp256k1/"
documentation = "https://docs.rs/secp256k1/"
description = "Rust wrapper library for Pieter Wuille's `libsecp256k1`. Implements ECDSA and BIP 340 signatures for the SECG elliptic curve group secp256k1 and related utilities."
keywords = [ "crypto", "ECDSA", "secp256k1", "libsecp256k1", "bitcoin" ]
readme = "README.md"
autoexamples = false # Remove when edition 2018 https://github.com/rust-lang/cargo/issues/5330

# Should make docs.rs show all functions, even those behind non-default features
[package.metadata.docs.rs]
features = [ "rand", "rand-std", "serde", "bitcoin_hashes", "recovery", "global-context" ]
rustdoc-args = ["--cfg", "docsrs"]

[features]
unstable = ["recovery", "rand-std"]
default = ["std"]
std = ["secp256k1-sys/std"]
# allow use of Secp256k1::new and related API that requires an allocator
alloc = []
rand-std = ["rand/std"]
recovery = ["secp256k1-sys/recovery"]
lowmemory = ["secp256k1-sys/lowmemory"]
global-context = ["std"]

# Give users full control of bitcoin_hashes features while stil using the secp256k1 re-exported
# bitcoin_hashes dependency.
bitcoin-hashes-std = ["bitcoin_hashes/std"]
bitcoin-hashes-alloc = ["bitcoin_hashes/alloc"]
bitcoin-hashes-std-serde = ["bitcoin_hashes/std", "bitcoin_hashes/serde-std"]
bitcoin-hashes-alloc-serde = ["bitcoin_hashes/alloc", "bitcoin_hashes/serde"]
bitcoin-hashes-std-schemars = ["bitcoin_hashes/std", "bitcoin_hashes/schemars"]

[dependencies]
secp256k1-sys = { version = "0.4.2", default-features = false, path = "./secp256k1-sys" }
# You probably do not want to use this dependency directly, see feautures above.
bitcoin_hashes = { version = "0.10", default-features = false, optional = true }
rand = { version = "0.6", default-features = false, optional = true }
serde = { version = "1.0", default-features = false, optional = true }


[dev-dependencies]
rand = "0.6"
rand_core = "0.4"
serde_test = "1.0"
bitcoin_hashes = "0.10"

[target.wasm32-unknown-unknown.dev-dependencies]
wasm-bindgen-test = "0.3"
rand = { version = "0.6", features = ["wasm-bindgen"] }


[[example]]
name = "sign_verify_recovery"
required-features = ["std", "recovery", "bitcoin-hashes-std"]

[[example]]
name = "sign_verify"
required-features = ["std", "bitcoin-hashes-std"]

[[example]]
name = "generate_keys"
required-features = ["std", "rand-std"]

[workspace]
members = ["secp256k1-sys"]
exclude = ["no_std_test"]
